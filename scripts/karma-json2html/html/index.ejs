
<!DOCTYPE html>
<% 
function browserName(name) {
    if(typeof name !== 'string') {
        return name;
    }
    const index = name.indexOf(' ');
    if(index > -1) {
        return name.substring(0, index);
    }
    return name;
}
browsers.forEach(browser => {
    const suiteMap = {};
    browser.results.forEach(result => {
        const suiteName = result.suite.join('-')
        if(!suiteMap[suiteName]) {
            suiteMap[suiteName] = []
        }
        suiteMap[suiteName].push(result)
    })
    browser.suites = Object.keys(suiteMap).map(suiteName => {
        return {
            suiteName: suiteName,
            results: suiteMap[suiteName]
        };
    })
})
%>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>测试结果</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons">
    <link rel="stylesheet" href="https://unpkg.com/bootstrap-material-design@4.1.1/dist/css/bootstrap-material-design.min.css" integrity="sha384-wXznGJNEXNG1NFsbm0ugrLFMQPWswR3lds2VeinahP8N0zJw9VWSopbjv2x7WCvX" crossorigin="anonymous">
    <style>
        .material-icons {
            font-size: 16px;
        }
        .suite-list .alert {
            display: flex;
            align-items: center;
            padding: 0.75em 0.8em;
        }
        .suite-list .suite-case-desc {
            margin-left: 1em;
        }
        .suite-list .suite-case-time {
            margin-left: auto;
        }
        .suite-case-assertion-error > * {
            display: block;
        }
        .suite-case-assertion-error-message:before,
        .suite-case-assertion-error-actual:before {
            content: '-';
            color:var(--red);
        }
        .suite-case-assertion-error-actual {
            color: red;
        }
        .suite-case-assertion-error-expected:before {
            content: '+';
            color: var(--blue);
        }
        .suite-case-item {
            border: 1px solid;
            margin-bottom: 1rem;
            position: relative;
        }
        .suite-case-item .alert {
            margin: 0;
        }
        .suite-case-item.case-success {
            border-color: var(--success)
        }
        .suite-case-item.case-skipped {
            border-color: var(--dark)
        }
        .suite-case-item.case-pending {
            border-color: var(--secondary)
        }
        .suite-case-item.case-error {
            border-color: var(--danger)
        }
        .suite-case-item:before {
            content: '';
            width: 2px;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: -1.25rem;
            margin-left: -3px;
        }
        .suite-case-item.case-success:before {
            background-color: var(--success)
        }
        .suite-case-item.case-skipped:before {
            background-color: var(--dark)
        }
        .suite-case-item.case-pending:before {
            background-color: var(--secondary)
        }
        .suite-case-item.case-error:before {
            background-color: var(--danger)
        }

        .suite-case-item.case-error .alert {
            border-bottom: 1px solid var(--danger);
        }
        .suite-case-log,
        .suite-case-assertion-error
        {
            padding: 0 1rem;
            font-size: 0.2rem;
            background-color: #ffddd3;
            color: var(--pink);
            margin: 0;
            border-bottom: 1px solid white;
        }
        .suite-case-log {
            padding-top: 0.8rem;
        }
        .suite-case-log+.suite-case-log {
            padding-top: 0;
        }
        .suite-case-assertion-error {
            padding-top: 0.8rem;
        }
        .suite-card-group .card{
            margin: 1rem;
        }
        .test-summary>span>i,.test-summary>span>span {
            vertical-align: middle;
        }
        .test-summary>span>span {
            padding-left: 0.6rem;
        }
        .switch-browser-dropdown-menu .switch-browser-menu-item {
            max-width: 30rem;
            flex-wrap: nowrap;
            padding: 0.8rem 1rem;
        }
        .switch-browser-menu-item .material-icons {
            display: none;
            padding-right: 0.6rem;
        }
        .switch-browser-menu-item.selected .material-icons {
            display: inline-block;
        }
    </style>
</head>
<body>
<nav class="navbar navbar-light" style="background-color: #e3f2fd;">
    <a class="navbar-brand">测试结果</a>
    <div class="mr-auto">
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                Browsers
            </button>
            <div class="dropdown-menu switch-browser-dropdown-menu">
                <% browsers.forEach(({browser}) => { %>
                    <a class="dropdown-item switch-browser-menu-item" href="javascript:;" menu-browser="<%= browser.id %>"><i class="material-icons text-primary">check</i><%= browser.name %></a>
                <% }) %>
            </div>
        </div>
    </div>
    <div class="test-summary">
        <span class="badge badge-light"><i class="material-icons">access_alarms</i> <span id="browser-total-time"></span></span>
        <span class="badge badge-light"><i class="material-icons">view_list</i>: <span id="browser-total-count"></span></span>
        <span class="badge badge-success"><i class="material-icons">done</i> <span id="browser-success-count"></span></span>
        <span class="badge badge-danger"><i class="material-icons">error</i><span id="browser-error-count"></span></span>
        <span class="badge badge-dark"><i class="material-icons">highlight_off</i> <span id="browser-skipped-count"></span></span>
    </div>
</nav>
<div class="summaries-progress-bar">
    <div class="progress">
        <% browsers.forEach(({browser}) => { %>
            <% 
                function percent(value) {
                    return Math.round(value / browser.lastResult.total * 10000) / 100 + '%';
                }
            %> 
            <div class="progress-bar bg-success" data-browser="<%=browser.id%>" style="width:<%=percent(browser.lastResult.success)%>"></div>
            <div class="progress-bar bg-danger" data-browser="<%=browser.id%>" style="width:<%=percent(browser.lastResult.failed)%>"></div>
            <div class="progress-bar bg-dark" data-browser="<%=browser.id%>" style="width:<%=percent(browser.lastResult.skipped)%>"></div>
        <% }) %>
    </div>
</div>
<section data-sply="scroll" class="suite-list">
    <% browsers.forEach(browser => { %>
        <div data-browser="<%= browser.id %>">
            <% 
                var suites = browser.suites;
            %> 
            <div class="suite-card-group">
                <% suites.forEach(suite => { %>
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title"><%= suite.suiteName %></h5>
                            <% suite.results.forEach(result => { %>
                                <% if (result.success) { %>
                                <div class="suite-case-item case-success">
                                <div class="alert alert-success">
                                    <i class="material-icons">done</i>
                                <% } else if (result.skipped) { %>
                                <div class="suite-case-item case-skipped">
                                <div class="alert alert-dark">
                                    <i class="material-icons">highlight_off</i>
                                <% } else if (result.pending) { %>
                                <div class="suite-case-item case-pending">
                                <div class="alert alert-secondary">
                                    <i class="material-icons">hourglass_empty</i>
                                <% } else { %>
                                <div class="suite-case-item case-error">
                                <div class="alert alert-danger">
                                    <i class="material-icons">error</i>
                                 <% } %> 
                                    <span class="suite-case-desc">
                                        <%= result.description %>
                                    </span>
                                    <span class="suite-case-time">
                                        <i class="material-icons">update</i>
                                        <%= result.endTime - result.startTime %>ms
                                    </span>
                                </div>

                                <% if (Array.isArray(result.log)) { %>
                                    <% result.log.forEach(logItem => { %>
                                        <pre class="suite-case-log"><%= logItem %></pre>
                                    <% }) %>
                                <% } %>
                                <% if (Array.isArray(result.assertionErrors)) { %>
                                    <% result.assertionErrors.forEach(assertionError => { %>
                                        <div class="suite-case-assertion-error">
                                            <span class="suite-case-assertion-error-message text-danger">
                                                <%= assertionError.message %> 
                                            </span>
                                            <span class="suite-case-assertion-error-actual text-danger">
                                                <%= assertionError.actual %> 
                                            </span>
                                            <span class="suite-case-assertion-error-expected text-primary">
                                                <%= assertionError.expected %> 
                                            </span>
                                        </div>
                                    <% }) %>
                                <% } %>
                                </div> <!-- div.suite-case-item -->
                            <% }) %>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>
    <% }) %>
</section>
</body>

<script>
    var karmaResults = <%- JSON.stringify(browsers) %>

    var menus = document.querySelectorAll('.switch-browser-menu-item');


    var defaultBrowserId = karmaResults[0].browser.id;

    var defaultMenu = Array.from(menus).find(it => {
        return it.getAttribute('menu-browser') === defaultBrowserId
    });

    defaultMenu.classList.add('selected');
    var last = defaultMenu;

    menus.forEach(function(menu, i) {
        var browserId = karmaResults[i].browser.id;
        menu.onclick = function() {
            last.classList.remove('selected');
            menu.classList.add('selected');
            last = menu;
            updateUI(browserId);
        }
    })


    var totalTimeElm = document.getElementById('browser-total-time');
    var totalCountElm = document.getElementById('browser-total-count');
    var successCountElm = document.getElementById('browser-success-count');
    var errorCountElm = document.getElementById('browser-error-count');
    var skippedCountElm = document.getElementById('browser-skipped-count');

    function updateUI(browserId) {
        var browserResult = karmaResults.find(it => it.browser.id === browserId);
        if(!browserResult) {
            return;
        }
        karmaResults.filter(it => it.browser.id !== browserId).forEach(function(result){
            var otherBrowserId = result.browser.id;
            var elms = document.querySelectorAll('[data-browser="'+otherBrowserId+'"]')
            elms.forEach(function(elm) {
                elm.classList.add('hide-browser-result')
            });
        });

        var elms = document.querySelectorAll('[data-browser="'+browserId+'"]')
        elms.forEach(function(elm) {
            elm.classList.remove('hide-browser-result')
        });
        var browserLastResult = browserResult.browser.lastResult;
        totalTimeElm.innerText = browserLastResult.totalTime + 'ms';
        totalCountElm.innerText = browserLastResult.total;
        successCountElm.innerText = browserLastResult.success;
        errorCountElm.innerText = browserLastResult.failed;
        skippedCountElm.innerText = browserLastResult.skipped;
    }

    updateUI(defaultBrowserId);

</script>
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://unpkg.com/popper.js@1.12.6/dist/umd/popper.js" integrity="sha384-fA23ZRQ3G/J53mElWqVJEGJzU0sTs+SvzG8fXVWP+kJQ1lwFAOkcUOysnlKJC33U" crossorigin="anonymous"></script>
<script src="https://unpkg.com/bootstrap-material-design@4.1.1/dist/js/bootstrap-material-design.js" integrity="sha384-CauSuKpEqAFajSpkdjv3z9t8E7RlpJ1UP0lKM/+NdtSarroVKu069AlsRPKkFBz9" crossorigin="anonymous"></script>
<script>$(document).ready(function() { $('body').bootstrapMaterialDesign(); });</script>
</html>